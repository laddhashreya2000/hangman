C51 COMPILER V9.60.0.0   MAIN                                                              04/07/2021 11:45:47 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /****************************************************
   2          HANGMAN GAME, in which the user
   3          enters the word he'll "guess", and then the user gets
   4          to start guessing letters. After each guess, the word
   5          is printed out with *s instead of unguessed letters.
   6           ****************************************************/
   7          #include <stdio.h>
   8          #include <stdlib.h> //for rand function
   9          //#include <string.h>
  10          #include <at89c5131.h>
  11          #include "lcd.h"  //C file contaninig LCD interfacing functions
  12          #include "serial.c" //C file with UART interfacing functions
  13          
  14          #define NUMBER_OF_WORDS 100
  15          #define MAX_WORD_SIZE 6
  16          
  17          code unsigned char vocab[NUMBER_OF_WORDS][MAX_WORD_SIZE] = { "start" ,"accept", "about","above","across","
             -action","admit","adult","affect","after","again","agency","agent","agree","ahead","allow","almost","alone","along","alwa
             -ys","among","amount","animal","answer","anyone","appear","apply","area","argue","around","arrive","artist","assume","att
             -ack","author","avoid","away","back","ball","bank","base","beat","become","before","begin","behind","best","better","beyo
             -nd","bill","black","blood","blue","board","book","born","both","break","bring","budget","build","call","camera","cancer"
             -,"card","care","career","carry","case","catch","cause","cell","center","chair","chance","change","charge","check","child
             -","choice","choose","church","city","civil","claim","class","clear","close","coach","cold","color","come","common","cost
             -","could","couple","course","court", "system", "record"};
  18          
  19          void main(void) {
  20   1        int N, show[MAX_WORD_SIZE], success, i, turn, incorrect;
  21   1        unsigned char ch, *word, guess, str_incorrect;
  22   1        lcd_init();
  23   1        uart_init();
  24   1        transmit_string("\r\n*******Hangman**********\r\n");
  25   1      
  26   1        lcd_cmd(0x84); //first row, 5th column
  27   1        lcd_write_string("Welcome"); //initial welcome msg
  28   1        lcd_cmd(0x0C1); //second row, second column
  29   1        lcd_write_string("Starting Game"); //initial starting game msg
  30   1        msdelay(1500); //1.5 sec delay
  31   1        
  32   1        while (1){ // Infinite loop so that game never ends
  33   2          lcd_cmd(0x01); // LCD clear at the start of every loop
  34   2          turn = rand()%100; // a random integer between 0 to 99 
  35   2          word = &vocab[turn]; // starting address of random word for every turn
  36   2          
  37   2          //transmit_char(*word); //check what the pointer is -- prints out first character of the word
  38   2      
  39   2          N=0; //length of the word initialised to 0
  40   2          // Get length of the word (max length = 6)
  41   2          while (*(word+N)!='\0'){ // while pointer does not point to empty string
  42   3            if(N==6){
  43   4              break;
  44   4            }
  45   3            transmit_char(*(word+N)); // to see the word in realterm
  46   3            N++;
  47   3          }
C51 COMPILER V9.60.0.0   MAIN                                                              04/07/2021 11:45:47 PAGE 2   

  48   2          //length = N+'0';
  49   2          //transmit_char(length); to check correct length
  50   2          transmit_string("\r\n");
  51   2          
  52   2          // show[i] is 1 if the character i has been guessed.
  53   2          for (i=0; i < N; ++i) {
  54   3            show[i] = 0;
  55   3          }
  56   2          incorrect=0; //initialise incorrect guesses to zero
  57   2          success=0; //success is 1 if word is guessed correctly
  58   2          
  59   2          // Loop over each round of guessing
  60   2          while (! success) {
  61   3            lcd_cmd(0x85); //first row, sixth column
  62   3            for(i=0; i < N; ++i) {
  63   4              if (show[i]) {
  64   5                lcd_write_char(*(word+i)); //display the characters which are guessed
  65   5              }
  66   4              else {
  67   5                lcd_write_string("_");
  68   5              }
  69   4            }
  70   3            
  71   3            lcd_cmd(0x0C1);
  72   3            lcd_write_string("Guess Letter ");
  73   3            // Get player's next guess
  74   3            ch = receive_char();
  75   3            lcd_write_char(ch); //show the guessed letter to player
  76   3            msdelay(500); // delay of 0.5 sec
  77   3            guess = 'F'; // True if user is successful in guess
  78   3            
  79   3            // show positions updated
  80   3            for(i=0; i < N; ++i) {
  81   4              if (*(word+i) == ch) {
  82   5                show[i] = 1;
  83   5                guess = 'T';
  84   5              }
  85   4            }
  86   3            lcd_cmd(0x01); //LCD clear
  87   3            
  88   3            if(guess=='F') { //incorrect guess case
  89   4              incorrect = incorrect+1; //incorrects incremented
  90   4              lcd_cmd(0x80);
  91   4              lcd_write_string("Incorrect Guess");
  92   4              lcd_cmd(0x0C2);
  93   4              lcd_write_string("Incorrects ");
  94   4              str_incorrect = incorrect+'0'; //converting int to char
  95   4              lcd_write_char(str_incorrect); //incorrect guesses displayed
  96   4              msdelay(1500);
  97   4              lcd_cmd(0x01);
  98   4              
  99   4              if(incorrect==6) { //Game over case
 100   5                lcd_cmd(0x82);
 101   5                lcd_write_string("Game Over !!");
 102   5                lcd_cmd(0x0C0);
 103   5                lcd_write_string("Word was ");
 104   5                for(i=0; i < N; ++i) {
 105   6                  lcd_write_char(*(word+i)); //display correct word   
 106   6                }
 107   5                break;
 108   5              }
 109   4            }
C51 COMPILER V9.60.0.0   MAIN                                                              04/07/2021 11:45:47 PAGE 3   

 110   3            else {// Determine whether the player has won
 111   4              success = 1;
 112   4              for(i = 0; i < N; ++i) {
 113   5                if (!show[i]) {
 114   6                  success = 0; //if any character unguessed, continue game
 115   6                  break;
 116   6                }
 117   5              }
 118   4              
 119   4              if(success) { //player won case
 120   5                lcd_cmd(0x85);
 121   5                for(i=0; i < N; ++i) {
 122   6                  lcd_write_char(*(word+i)); //display correct word   
 123   6                }
 124   5                lcd_cmd(0x0C0);
 125   5                lcd_write_string("Congratulations"); //victory msg
 126   5                break;
 127   5              }
 128   4            }
 129   3          } //game ends
 130   2          
 131   2          msdelay(1500); //delay 1.5 sec
 132   2          lcd_cmd(0x01); //LCD clear
 133   2          lcd_cmd(0x82); //first row, third column
 134   2          lcd_write_string("Starting New"); //start new game msg
 135   2          msdelay(1000); //delay 1 sec before starting new game
 136   2        }
 137   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    946    ----
   CONSTANT SIZE    =    750    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
